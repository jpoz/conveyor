package views

import (
	"encoding/json"
	"fmt"
	"google.golang.org/protobuf/encoding/protojson"
	"github.com/jpoz/conveyor/wire"
)

type QueueView struct {
	Name     string
	JobCount int64

	Jobs []JobView
}

script gotoQueue(queueName string) {
	window.location.href = "../queues/" + queueName
}

script gotoQueueJob(queueName, jobUuid string) {
	window.location.href = "../queues/" + queueName + "/jobs/" + jobUuid
}

func PrettyJSON(v any) string {
	pretty, err := json.MarshalIndent(v, "", "  ")
	if err != nil {
		return err.Error()
	}
	return string(pretty)
}

func JobPayload(job *wire.Job) string {
	bts, err := protojson.Marshal(job)
	if err != nil {
		return err.Error()
	}

	container := map[string]string{
		"job": string(bts),
	}
	cbts, err := json.Marshal(container)
	if err != nil {
		return err.Error()
	}

	return string(cbts)
}

templ Queues(queues []QueueView) {
	@AppLayout("Queues", "queues") {
		<div class="py-4">
			<div>
				<h3 class="text-3xl font-bold tracking-tight text-gray-200 mb-4">
					Queues
				</h3>
				<div>
					<ul class="divide-y divide-gray-700">
						for _, item := range queues {
							<li
								class="p-3 flex justify-between items-center hover:bg-gray-800"
								onclick={ gotoQueue(item.Name) }
							>
								<div class="text-sm font-medium text-gray-300">{ item.Name }</div>
								<div class="text-sm text-gray-300">{ fmt.Sprintf("%d", item.JobCount) } jobs</div>
							</li>
						}
					</ul>
				</div>
			</div>
		</div>
	}
}

templ Queue(queue QueueView) {
	@AppLayout(fmt.Sprintf("Queue %s", queue.Name), "queues") {
		<div class="py-4">
			<div>
				<h3 class="text-3xl font-bold tracking-tight text-gray-200 mb-4">
					Queue { queue.Name }
				</h3>
				<div>
					<div class="flex flex-col divide-y divide-gray-700">
						for _, item := range queue.Jobs {
							@qJob(queue, item)
						}
					</div>
				</div>
			</div>
		</div>
	}
}

templ qJob(queue QueueView, item JobView) {
	<div
		id={ "qJob" + item.Job.Uuid }
		class="p-3 flex justify-between items-center hover:bg-gray-800"
	>
		<div class="text-sm font-mono font-medium text-gray-300 text-left pl-3">
			{ item.Job.Uuid[0:8] }
		</div>
		<div class="text-sm text-gray-300 flex-grow text-left pl-3">
			<div class="text-sm font-mono">
				{ PrettyJSON(item.UnmarshaledPayload) }
			</div>
		</div>
		<div class="text-sm text-gray-300">
			<a
				class="text-sm text-gray-300 bg-blue-500 px-2 py-1 rounded-md"
				href={ templ.SafeURL(fmt.Sprintf("/queues/%s/jobs/%s", queue.Name, item.Job.Uuid)) }
			>
				View
			</a>
			<a
				class="text-sm text-gray-300 bg-red-500 px-2 py-1 rounded-md ml-2 cursor-pointer"
				hx-delete="/jobs"
				hx-vals={ JobPayload(item.Job) }
				hx-swap="delete"
				hx-target={ "#qJob" + item.Job.Uuid }
			>
				Cancel
			</a>
		</div>
	</div>
}
